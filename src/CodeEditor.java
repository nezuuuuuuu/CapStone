/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.border.MatteBorder;
import javax.swing.plaf.metal.MetalBorders;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 * @author jan edward
 * @author ana marie
 */
public class CodeEditor extends javax.swing.JFrame {
    
    /**
     * Creates new form CodeEditor
     */
     String fileExtension;
    String path;
    File pathFile;
    JFileChooser jFileChooser;

    private DefaultMutableTreeNode root;
    private DefaultTreeModel treeModel;
    ArrayList<JEditorPane> jEditorPaneList;
    Runtime rt;
    ProcessBuilder processBuilder;
    Process process;
    boolean ctr=false;
    boolean f=false;
    private  static volatile CodeEditor single=null;
    boolean highlighted;

    CodeEditor(String passedPath, String ext) {
          initializeField(passedPath,ext);
    }

    public static CodeEditor getPython(String passedPath){
        if(single==null){
            single=new Python(passedPath);
        }
        return single;
    }
    public static CodeEditor getJava(String passedPath){
        if(single==null){
            single=new Java(passedPath);
        }
        return single;
    }
 
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topBar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        OpenBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        runBtn = new javax.swing.JButton();
        toSearch = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        code_editor = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FileArea = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        topBar.setBackground(new java.awt.Color(93, 0, 118));

        javax.swing.GroupLayout topBarLayout = new javax.swing.GroupLayout(topBar);
        topBar.setLayout(topBarLayout);
        topBarLayout.setHorizontalGroup(
            topBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 916, Short.MAX_VALUE)
        );
        topBarLayout.setVerticalGroup(
            topBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        addBtn.setBackground(new java.awt.Color(93, 0, 118));
        addBtn.setFont(new java.awt.Font("Beon", 0, 16)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("ADD FILE");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        OpenBtn.setBackground(new java.awt.Color(93, 0, 118));
        OpenBtn.setFont(new java.awt.Font("Beon", 0, 16)); // NOI18N
        OpenBtn.setForeground(new java.awt.Color(255, 255, 255));
        OpenBtn.setText("OPEN FILE");
        OpenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(93, 0, 118));
        saveBtn.setFont(new java.awt.Font("Beon", 0, 16)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("SAVE ALL");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        SearchBtn.setBackground(new java.awt.Color(93, 0, 118));
        SearchBtn.setFont(new java.awt.Font("Beon", 0, 16)); // NOI18N
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setText("SEARCH");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        runBtn.setBackground(new java.awt.Color(93, 0, 118));
        runBtn.setFont(new java.awt.Font("Beon", 0, 16)); // NOI18N
        runBtn.setForeground(new java.awt.Color(255, 255, 255));
        runBtn.setText("Run");
        runBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBtnActionPerformed(evt);
            }
        });

        toSearch.setText("Type in text...");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OpenBtn)
                .addGap(18, 18, 18)
                .addComponent(saveBtn)
                .addGap(92, 92, 92)
                .addComponent(SearchBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(runBtn)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runBtn)
                    .addComponent(saveBtn)
                    .addComponent(OpenBtn)
                    .addComponent(addBtn))
                .addContainerGap())
        );

        code_editor.setBackground(new java.awt.Color(93, 0, 118));

        TabbedPane.setBackground(new java.awt.Color(137, 0, 174));
        TabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabbedPaneMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout code_editorLayout = new javax.swing.GroupLayout(code_editor);
        code_editor.setLayout(code_editorLayout);
        code_editorLayout.setHorizontalGroup(
            code_editorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(code_editorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TabbedPane)
                .addContainerGap())
        );
        code_editorLayout.setVerticalGroup(
            code_editorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );

        jPanel1.setBackground(new java.awt.Color(93, 0, 118));

        FileArea.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        FileArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FileAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(FileArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(code_editor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(code_editor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(topBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
       
        String fileName = JOptionPane.showInputDialog(this, "Input File name");
        if(fileName == null){
            return;
        }else if(fileName.isEmpty()){
            return;
        }
        JEditorPane newT;

        String component = null;
        newT = new javax.swing.JEditorPane();
        newT.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                if(highlighted){
                    SearchText("",-1);
                }
            }
        });
        if("java".equals(fileExtension)) {
            component="public class "+fileName+" {\n\n}";
        }
        newT.setText(component);

        TabbedPane.addTab(fileName + "." + fileExtension, new JScrollPane(newT));
    
    }//GEN-LAST:event_addBtnActionPerformed

    private void runBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBtnActionPerformed
        String outPath = path + "\\out";
        String srcPath = path + "\\src";
        try{
            if("py".equals(fileExtension)){
                runPython();
                return;
            }
            new FileReader(new File(outPath));
        }catch(FileNotFoundException e){
            Boolean bool = new File(outPath).mkdirs();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Cannot Run");
         }

        try{

            String[] scrPaths;
            File[] srcDirFiles = new File(srcPath).listFiles();
            for(File f : srcDirFiles){
                String[] command = {"cmd", "/c", "cd", srcPath, "&&", "javac", "-d", outPath, f.getName()};

                // Execute the command
                processBuilder = new ProcessBuilder(command);
                process = processBuilder.start();
                process.waitFor();
            }

            try{
                runProgram(jEditorPaneList);
            }catch(IOException e){
                JOptionPane.showMessageDialog(this, "File not found");
                return;
            }
        }catch(HeadlessException | IOException | InterruptedException e){
            JOptionPane.showMessageDialog(this, "Compiling Failed");

        }
        updateTree();
    }//GEN-LAST:event_runBtnActionPerformed

    private void FileAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileAreaMouseClicked
         if(evt.getClickCount()==2) {
            root = (DefaultMutableTreeNode) FileArea.getSelectionPath().getLastPathComponent();
            if(root.isLeaf()) {
                String findPath = "\\"+root.getUserObject().toString();
                while(root.getParent().getParent()!=null){
                    findPath= "\\"+root.getParent().toString()+findPath;
                    root= (DefaultMutableTreeNode) root.getParent();
                }
                findPath=path+findPath;
                System.out.println(findPath);

                try {
                    openFile(findPath,findPath);
                } catch (IOException ex) {
                    throw new RuntimeException(ex);
                }
            }
        }
    }//GEN-LAST:event_FileAreaMouseClicked

    private void OpenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenBtnActionPerformed
         
        if(jFileChooser.showOpenDialog(null)==JFileChooser.APPROVE_OPTION){
            pathFile=jFileChooser.getSelectedFile();
            path=pathFile.getAbsolutePath();
            root = new DefaultMutableTreeNode(pathFile.getName());
            treeModel = new DefaultTreeModel(root);
            FileArea.setModel(treeModel);
            FileArea.setShowsRootHandles(true);
            setTree(pathFile,root);

        }
    }//GEN-LAST:event_OpenBtnActionPerformed

    private void TabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabbedPaneMouseClicked
        
        if(evt.getClickCount()==3){
            TabbedPane.remove(TabbedPane.getSelectedIndex());
        }
    }//GEN-LAST:event_TabbedPaneMouseClicked

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
         jEditorPaneList.clear();
                String srcPath=path+"\\src";
                try {
                    new FileReader(new File(srcPath));
                } catch (FileNotFoundException ee) {
                    Boolean bool = new File(srcPath).mkdirs();
                }
                try {
                    Component[] components=TabbedPane.getComponents();

                    for(Component c:components) {
                        jEditorPaneList.add((JEditorPane)(c.getComponentAt(3,3)).getComponentAt(3,3));
                    }
                    for (JEditorPane jep:jEditorPaneList) {

                        File file = new File(srcPath + "\\" + TabbedPane.getTitleAt(jEditorPaneList.indexOf(jep)));

                        FileWriter fileWriter = new FileWriter(file);
                        jep.write(fileWriter);
                        fileWriter.close();
                    }



                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this,"Failed to save");
                }
                updateTree();


    }//GEN-LAST:event_saveBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
          if(highlighted){
                   JEditorPane j= (JEditorPane) ((TabbedPane.getComponent(TabbedPane.getSelectedIndex())).getComponentAt(3,3)).getComponentAt(3,3 );
                   j.getHighlighter().removeAllHighlights();
                    highlighted=false;
                }
        String str=toSearch.getText();
           SearchText(str,0);
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void openFile(String fileName, String file) throws IOException{
       javax.swing.JEditorPane newT;
        String component=null;
        String temp;


        newT = new javax.swing.JEditorPane();
        JScrollPane jsp=new JScrollPane(newT);
        File toOpen=new File(file);
        try (BufferedReader bfr = new BufferedReader(new FileReader(toOpen))) {
            while ((temp = bfr.readLine()) != null) {
                component += "\n" + temp;
            }
        }
        newT.setText(component);


        TabbedPane.addTab(toOpen.getName(),jsp);
    }
    

    void setTree(File fileRoot, DefaultMutableTreeNode node){
          File[] files = fileRoot.listFiles();
        if(files == null)
            return;

        for(File file : files){
            String fileName = file.getName();
            DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(fileName);
            node.add(childNode);
            if(file.isDirectory()){
                setTree(file, childNode);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree FileArea;
    private javax.swing.JButton OpenBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel code_editor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton runBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField toSearch;
    private javax.swing.JPanel topBar;
    // End of variables declaration//GEN-END:variables
    private void SearchText(String toFind, int start){
        JEditorPane textArea= (JEditorPane) ((TabbedPane.getComponent(TabbedPane.getSelectedIndex())).getComponentAt(3,3)).getComponentAt(3,3 );
        if(toFind.length()>=textArea.getText().length()||start<0||start>textArea.getText().substring(start).length()){
            return;
        }
        String temp=textArea.getText().substring(start);
        int i= temp.indexOf(toFind)+start;
        int j=i+toFind.length();

        Highlighter highlighter=textArea.getHighlighter();
        Highlighter.HighlightPainter Painter=new DefaultHighlighter.DefaultHighlightPainter(Color.pink);

        try {
            highlighter.addHighlight(i,j,Painter);
            highlighted=true;
        } catch (BadLocationException e) {
            throw new RuntimeException(e);
        }
        temp=temp.substring(j);
        if(!temp.contains(toFind)){
            return;
        }
        SearchText(toFind,j);
    }
    
    
    public void runProgram(ArrayList<JEditorPane>jEditorPaneList) throws IOException {
         String srcPath = path + "\\src";
        String outPath = path + "\\out";
        int selected = TabbedPane.getSelectedIndex();
        File file = new File(srcPath+"\\"+TabbedPane.getTitleAt(TabbedPane.getSelectedIndex()));

        BufferedReader bfr = new BufferedReader(new FileReader(file));
        String mainFinder;
        while((mainFinder = bfr.readLine()) != null){
            mainFinder = mainFinder.replaceAll(" ","");

            if(mainFinder.startsWith("publicstaticvoidmain")){
                String[] command={"cmd", "/c", "\"cd " +outPath+ "&start cmd /k java " + file.getName().substring(0,file.getName().length()-5) + "\""};
                processBuilder=new ProcessBuilder(command);
                process = processBuilder.start();
                return;

            }
        }
        JOptionPane.showMessageDialog(this, "Main not found");
        System.out.println("\"cd " + outPath + "&start cmd /k java" + file.getName() + "\"");
    }
    
    public void updateTree(){
       pathFile = new File(path);
        root = new DefaultMutableTreeNode(pathFile.getName());
        treeModel = new DefaultTreeModel(root);
        FileArea.setModel(treeModel);
        FileArea.setShowsRootHandles(true);
        setTree(pathFile, root);
    }
    public void runPython() throws IOException{
        String srcPath = path + "\\src";
        int selected = TabbedPane.getSelectedIndex();
        File file = new File(srcPath+"\\"+TabbedPane.getTitleAt(TabbedPane.getSelectedIndex()));
       
        String[] command={"cmd", "/c", "\"cd " +srcPath+ "&start cmd /k Python " + file.getName().substring(0,file.getName().length()-3) + "\""};
        processBuilder=new ProcessBuilder(command);
        process = processBuilder.start();
    }
    private void initializeField(String passedPath,String ext){
         this.path = passedPath;
        this.fileExtension = ext;
        jFileChooser =  new JFileChooser();
        
        jFileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        pathFile = new File(passedPath);
        root = new DefaultMutableTreeNode(pathFile.getName());
        treeModel = new DefaultTreeModel(root);
        jEditorPaneList = new ArrayList<>();
        rt = Runtime.getRuntime();
        
        //setUndecorated(true);
        //EDITOR PAIN
        initComponents();
//        this.setContentPane(code_editor);
        FileArea.setModel(treeModel);
        FileArea.setShowsRootHandles(true);
        
        setTree(pathFile, root);
        javax.swing.JEditorPane newT;
        String component = null;
        newT = new javax.swing.JEditorPane();
        newT.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                if(highlighted){
                    SearchText("",-1);
                }
            }
        });
        
        if("java".equals(fileExtension));{
           component="""
                     public class Main {
                     public static void main(String[] args){System.out.print("Hello world!");
                     }
                     }""";
            newT.setText(component);
        }
       
        
        TabbedPane.addTab("Main"+"."+fileExtension, new JScrollPane(newT));
        this.setLocationRelativeTo(null);
        this.setTitle("Code Editor");   
    }
}
